import tkinter as tk
from tkinter import messagebox


# Separate game logic from UI logic
class GameLogic:
    def __init__(self, board_size):
        self.board_size = board_size
        self.board = [[None for _ in range(board_size)] for _ in range(board_size)]

    def make_move(self, row, col, letter):
        if self.board[row][col] is None:
            self.board[row][col] = letter
            return True
        return False

    def reset(self, board_size):
        self.board_size = board_size
        self.board = [[None for _ in range(board_size)] for _ in range(board_size)]


class SOSGame:
    def __init__(self, root):
        self.root = root
        self.root.title("SOS Game")
        self.root.configure(bg="#3a3a3a")  # Background color

        self.current_player = "Blue"  # Player 1 is Blue, Player 2 is Red
        self.current_letter = tk.StringVar(value="S")  # Default letter for Blue player
        self.red_letter_var = tk.StringVar(value="S")  # Default letter for Red player
        self.mode = tk.StringVar(value="Simple")  # Default game mode is Simple
        self.board_size = tk.IntVar(value=5)  # Default board size is 5x5
        self.game_logic = GameLogic(self.board_size.get())  # Game logic instance

        # Call function to create the GUI layout
        self.create_gui()

    def create_gui(self):
        # Title label
        title = tk.Label(self.root, text="SOS Game", font=("Helvetica", 24, "bold"), fg="white", bg="#3a3a3a")
        title.grid(row=0, column=0, columnspan=8, pady=20)

        # Mode Selection (Simple/General)
        mode_label = tk.Label(self.root, text="Game Mode:", font=("Helvetica", 14), fg="white", bg="#3a3a3a")
        mode_label.grid(row=1, column=0, padx=10)
        tk.Radiobutton(self.root, text="Simple", variable=self.mode, value="Simple", bg="#3a3a3a", fg="white",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=1, column=1)
        tk.Radiobutton(self.root, text="General", variable=self.mode, value="General", bg="#3a3a3a", fg="white",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=1, column=2)

        # Board size selection
        size_label = tk.Label(self.root, text="Board Size:", font=("Helvetica", 14), fg="white", bg="#3a3a3a")
        size_label.grid(row=1, column=3, padx=10)
        tk.Radiobutton(self.root, text="3x3", variable=self.board_size, value=3, bg="#3a3a3a", fg="white",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=1, column=4)
        tk.Radiobutton(self.root, text="5x5", variable=self.board_size, value=5, bg="#3a3a3a", fg="white",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=1, column=5)
        tk.Radiobutton(self.root, text="7x7", variable=self.board_size, value=7, bg="#3a3a3a", fg="white",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=1, column=6)

        # New Game Button
        new_game_button = tk.Button(self.root, text="New Game", command=self.new_game, bg="#4caf50", fg="white",
                                    font=("Helvetica", 12, "bold"), padx=10, pady=5, relief="raised")
        new_game_button.grid(row=1, column=7, padx=20)

        # Player Options: Blue Player
        player_blue_label = tk.Label(self.root, text="Blue Player", font=("Helvetica", 14, "bold"), fg="#2196f3",
                                     bg="#3a3a3a")
        player_blue_label.grid(row=2, column=0)
        tk.Radiobutton(self.root, text="S", variable=self.current_letter, value="S", bg="#3a3a3a", fg="#2196f3",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=3, column=0)
        tk.Radiobutton(self.root, text="O", variable=self.current_letter, value="O", bg="#3a3a3a", fg="#2196f3",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=4, column=0)

        # Player Options: Red Player
        player_red_label = tk.Label(self.root, text="Red Player", font=("Helvetica", 14, "bold"), fg="#f44336",
                                    bg="#3a3a3a")
        player_red_label.grid(row=2, column=6)
        tk.Radiobutton(self.root, text="S", variable=self.red_letter_var, value="S", bg="#3a3a3a", fg="#f44336",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=3, column=6)
        tk.Radiobutton(self.root, text="O", variable=self.red_letter_var, value="O", bg="#3a3a3a", fg="#f44336",
                       font=("Helvetica", 12), selectcolor="#444").grid(row=4, column=6)

        # Create the board
        self.create_board()

    def create_board(self):
        # Clear any existing buttons on the board
        for widget in self.root.winfo_children():
            if isinstance(widget, tk.Button) and widget.cget("text") != "New Game":
                widget.destroy()

        size = self.board_size.get()  # Get selected board size
        self.game_logic.reset(size)  # Reset the game logic
        self.board = [[None for _ in range(size)] for _ in range(size)]

        for row in range(size):
            for col in range(size):
                button = tk.Button(self.root, text=" ", width=6, height=2, font=("Helvetica", 16, "bold"),
                                   bg="#eeeeee", fg="black", relief="ridge",
                                   command=lambda r=row, c=col: self.make_move(r, c))
                button.grid(row=row + 5, column=col + 1, padx=5, pady=5)

        # Display current turn
        self.turn_label = tk.Label(self.root, text=f"Current turn: {self.current_player}", font=("Helvetica", 14),
                                   fg="white", bg="#3a3a3a")
        self.turn_label.grid(row=2, column=2, columnspan=4)

    def new_game(self):
        self.current_player = "Blue"
        self.create_board()

    def make_move(self, row, col):
        letter = self.current_letter.get() if self.current_player == "Blue" else self.red_letter_var.get()
        if self.game_logic.make_move(row, col, letter):
            button = self.root.grid_slaves(row=row + 5, column=col + 1)[0]
            color = "#2196f3" if self.current_player == "Blue" else "#f44336"
            button.config(text=letter, state="disabled", disabledforeground=color)

            # Switch players
            self.current_player = "Red" if self.current_player == "Blue" else "Blue"
            self.turn_label.config(text=f"Current turn: {self.current_player}")


# Create the game window
root = tk.Tk()
game = SOSGame(root)
root.mainloop()
